name: deploy-prod

on:
  release:
    branches: [ main ]
    types: [ released, deleted ]
    # Так как в начале воркфлоу фетчится последний релиз, то триггер
    # на `deleted` позволить 'бесплатно' роллбэчиться

jobs:

  build:
    runs-on: [self-hosted, linux, X64]
    steps:
      - name: Get last released version
        id: lastver
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        with:
          repository: ${{ github.repository }}
          excludes: prerelease, draft
      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.lastver.outputs.release }}
          path: prod
      - name: Set secrets
        working-directory: prod
        run: |
          python3 -c "
          with open('cfg.ini', 'r+') as f:
              d = f.read()

              d = d\
              .replace('DB_URL', '"'${{ secrets.DB_URL_PROD }}'"')\
              .replace('DB_USER', '"'${{ secrets.DB_USER_PROD }}'"')\
              .replace('DB_PASS', '"'${{ secrets.DB_PASS_PROD }}'"')\
              .replace('DB_NAME', '"'${{ secrets.DB_NAME_PROD }}'"')\
              .replace('SEC_SIGNUP', '"'${{ secrets.SEC_SIGNUP_PROD }}'"')\
              .replace('SEC_NOTIFY', '"'${{ secrets.SEC_NOTIFY_PROD }}'"')\
              .replace('SEC_AUTH', '"'${{ secrets.SEC_AUTH_PROD }}'"')\
              .replace('SALT_SIGNUP', '"'${{ secrets.SALT_SIGNUP_PROD }}'"')\
              .replace('SALT_NOTIFY', '"'${{ secrets.SALT_NOTIFY_PROD }}'"')\
              .replace('EMAIL_SERVER', '"'${{ secrets.EMAIL_SERVER }}'"')\
              .replace('EMAIL_PORT', '"'${{ secrets.EMAIL_PORT }}'"')\
              .replace('SIGNUP_EMAIL_FROM', '"'${{ secrets.SIGNUP_EMAIL_FROM }}'"')\
              .replace('SIGNUP_EMAIL_LOGIN', '"'${{ secrets.SIGNUP_EMAIL_LOGIN }}'"')\
              .replace('SIGNUP_EMAIL_PASS', '"'${{ secrets.SIGNUP_EMAIL_PASS }}'"')
              .replace('NOTIFY_EMAIL_FROM', '"'${{ secrets.NOTIFY_EMAIL_FROM }}'"')\
              .replace('NOTIFY_EMAIL_LOGIN', '"'${{ secrets.NOTIFY_EMAIL_LOGIN }}'"')\
              .replace('NOTIFY_EMAIL_PASS', '"'${{ secrets.NOTIFY_EMAIL_PASS }}'"')

              f.seek(0)
              f.write(d)
              f.truncate()
              f.close()"
      - name: Install app
        working-directory: prod 
        run: |
          python3.9 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install -e "."
      - name: Apply DB migrations
        working-directory: prod
        run: |
            source .venv/bin/activate
            alembic -c cfg.ini upgrade head
    
  deploy:
    needs: build
    runs-on: [self-hosted, linux, X64]
    steps:
      - name: Move new API specification
        working-directory: prod
        run: |
          mv openapi-spec.yml cyberdas/static/openapi-spec.yml
      - name: Restart service
        run: |
          sudo /bin/systemctl restart gunicorn_prod
      - name: Check status
        run: |
          sleep 5
          systemctl status gunicorn_prod
          
          if [ $? -eq 0 ]
          then 
            exit 0
          else
            echo "[ ERROR ] Service is not running"
            exit 1
          fi